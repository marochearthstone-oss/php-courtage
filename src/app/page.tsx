"use client"

import { useState } from "react"
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
import { Button } from "@/components/ui/button"
import { Avatar, AvatarFallback } from "@/components/ui/avatar"
import { Progress } from "@/components/ui/progress"
import { Badge } from "@/components/ui/badge"
import { Separator } from "@/components/ui/separator"
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs"
import Lexique from "@/components/Lexique"
import LexiqueTooltip from "@/components/LexiqueTooltip"

interface Message {
  id: number
  text: string
  sender: "conseiller" | "client"
  timestamp: Date
}

interface ResponseCategory {
  id: string
  title: string
  description: string
  objectionResponse: string
}

interface ScriptStep {
  id: number
  title: string
  conseillerMessage: string
  categories: ResponseCategory[]
}

// Fonction pour diviser le texte en segments avec les termes du lexique
const splitTextWithLexiqueTerms = (text: string): React.ReactNode[] => {
  const lexiqueTerms = [
    "Assurance", "Cabinet de courtage", "S√©curit√© sociale", "Mutuelle sant√©", 
    "Pr√©voyance", "Indemnit√©s journali√®res hospitali√®res", "Capital d√©c√®s", 
    "Protection juridique", "Assurance obs√®ques", "Tutelle", "Curatelle", 
    "D√©lai de carence", "Reste √† charge", "Date d'effet", "Date d'√©ch√©ance", 
    "Tacite reconduction", "R√©siliation", "Signature √©lectronique", "RIB", 
    "CNIL", "RGPD", "Bloctel", "R√©flexion", "IBAN", "NIR"
  ]

  if (!text) return [text]

  console.log("üîç Texte √† analyser:", text)
  console.log("üìù Termes du lexique:", lexiqueTerms)

  let segments: React.ReactNode[] = []
  let remainingText = text

  // Trier les termes par longueur d√©croissante pour √©viter les conflits
  const sortedTerms = [...lexiqueTerms].sort((a, b) => b.length - a.length)

  while (remainingText.length > 0) {
    let foundTerm = false
    let earliestIndex = -1
    let foundTermText = ""
    let foundDefinition = ""

    // Chercher le terme qui appara√Æt en premier
    for (const term of sortedTerms) {
      // Approche simple : recherche directe insensible √† la casse
      const termLower = term.toLowerCase()
      const remainingTextLower = remainingText.toLowerCase()
      const index = remainingTextLower.indexOf(termLower)
      
      if (index !== -1) {
        console.log(`‚úÖ Terme trouv√©: "${term}" √† l'index ${index}`)
        if (earliestIndex === -1 || index < earliestIndex) {
          earliestIndex = index
          foundTermText = remainingText.substring(index, index + term.length)
          foundDefinition = getDefinitionForTerm(term)
        }
      }
    }

    if (earliestIndex >= 0) {
      // Ajouter le texte avant le terme trouv√©
      if (earliestIndex > 0) {
        segments.push(remainingText.substring(0, earliestIndex))
      }
      
      // Ajouter le terme avec tooltip
      segments.push(
        <span key={`${remainingText}-${earliestIndex}`} className="bg-yellow-200 px-1 rounded text-sm font-medium cursor-help" title={foundDefinition}>
          {foundTermText}
        </span>
      )
      
      // Mettre √† jour le texte restant
      remainingText = remainingText.substring(earliestIndex + foundTermText.length)
      foundTerm = true
      console.log("üìç Segments actuels:", segments.length, "Texte restant:", remainingText)
    } else {
      // Plus aucun terme trouv√©, ajouter le reste du texte
      segments.push(remainingText)
      console.log("üèÅ Fin du traitement, segments totaux:", segments.length)
      break
    }
  }

  return segments
}

// Fonction pour obtenir la d√©finition d'un terme
const getDefinitionForTerm = (term: string): string => {
  const definitions: Record<string, string> = {
    "Assurance": "Service financier offert par une compagnie d'assurance √† ses clients qui consiste √† couvrir partiellement ou totalement les frais en cas de sinistre.",
    "Cabinet de courtage": "Une entreprise sp√©cialis√©e dans le courtage, c'est-√†-dire l'interm√©diation entre deux parties pour la conclusion d'un contrat.",
    "S√©curit√© sociale": "Un ensemble d'institutions publiques qui offrent une protection sociale aux citoyens contre divers risques sociaux.",
    "Mutuelle sant√©": "Une assurance priv√©e qui compl√®te les remboursements de la S√©curit√© sociale pour les frais de sant√©.",
    "Pr√©voyance": "Ensemble de garanties qui visent √† prot√©ger les personnes contre les cons√©quences financi√®res de certains √©v√©nements de la vie.",
    "Indemnit√©s journali√®res hospitali√®res": "Prestations financi√®res vers√©es pour compenser les frais li√©s √† une hospitalisation.",
    "Capital d√©c√®s": "Une somme d'argent vers√©e en cas de d√©c√®s d'une personne pour aider les b√©n√©ficiaires.",
    "Protection juridique": "Assurance qui prend en charge les frais li√©s √† un litige entre l'assur√© et un tiers.",
    "Assurance obs√®ques": "Couvre enti√®rement ou partiellement les frais des fun√©railles.",
    "Tutelle": "Mesure judiciaire de protection d'un majeur qui n'est plus en mesure de veiller seul sur ses propres int√©r√™ts.",
    "Curatelle": "Mesure de protection juridique pour les personnes dont les facult√©s sont alt√©r√©es.",
    "D√©lai de carence": "P√©riode qui s'√©coule avant que des prestations deviennent effectives.",
    "Reste √† charge": "Part dont l'assur√© doit s'acquitter apr√®s remboursement de l'Assurance Maladie.",
    "Date d'effet": "Date √† laquelle les obligations du contrat deviennent applicables.",
    "Date d'√©ch√©ance": "Date √† laquelle le contrat prend fin.",
    "Tacite reconduction": "Renouvellement automatique d'un contrat √† son √©ch√©ance.",
    "R√©siliation": "Cessation des effets d'un contrat √† une date donn√©e.",
    "Signature √©lectronique": "Version num√©rique d'une signature manuscrite garantissant l'authenticit√©.",
    "RIB": "Document contenant les informations essentielles pour identifier un compte bancaire.",
    "CNIL": "Commission charg√©e de veiller √† la protection des donn√©es personnelles.",
    "RGPD": "R√®glement europ√©en encadrant le traitement des donn√©es personnelles.",
    "Bloctel": "Service permettant aux consommateurs de s'opposer au d√©marchage t√©l√©phonique.",
    "R√©flexion": "P√©riode de 14 jours apr√®s souscription pendant laquelle le client peut annuler son contrat.",
    "IBAN": "International Bank Account Number - Num√©ro de compte bancaire international standardis√© qui permet d'identifier un compte bancaire de mani√®re unique.",
    "NIR": "Num√©ro d'Inscription au R√©pertoire - Num√©ro de s√©curit√© sociale fran√ßais unique compos√© de 15 caract√®res."
  }
  
  // Recherche insensible √† la casse
  const normalizedTerm = term.charAt(0).toUpperCase() + term.slice(1).toLowerCase()
  return definitions[normalizedTerm] || definitions[term] || "D√©finition non disponible"
}

export default function Home() {
  const [selectedCabinet, setSelectedCabinet] = useState<string | null>(null)
  const [currentStep, setCurrentStep] = useState<number>(1)
  const [messages, setMessages] = useState<Message[]>([])
  const [stepHistory, setStepHistory] = useState<{[key: number]: Message[]}>({})
  const [showLexique, setShowLexique] = useState<boolean>(false)
  const [showIBANValidator, setShowIBANValidator] = useState<boolean>(false)
  const [showNIRValidator, setShowNIRValidator] = useState<boolean>(false)
  const [ibanInput, setIbanInput] = useState<string>("")
  const [nirInput, setNirInput] = useState<string>("")
  const [ibanResult, setIbanResult] = useState<string | null>(null)
  const [nirResult, setNirResult] = useState<string | null>(null)

  const cabinets = [
    {
      id: "php",
      name: "PHP Courtage",
      description: "Courtage en assurances et pr√©voyance",
      colors: {
        primary: "bg-slate-700",
        secondary: "bg-amber-600",
        accent: "bg-slate-50",
        text: "text-slate-700",
        border: "border-slate-200",
        badge: "bg-slate-100 text-slate-700 border-slate-200"
      }
    },
    {
      id: "gif",
      name: "GIF (Groupe International Fran√ßais des Assurances)",
      description: "Courtage international en assurances",
      colors: {
        primary: "bg-gray-700",
        secondary: "bg-stone-600",
        accent: "bg-gray-50",
        text: "text-gray-700",
        border: "border-gray-200",
        badge: "bg-gray-100 text-gray-700 border-gray-200"
      }
    }
  ]

  const startConversation = (cabinetId: string) => {
    setSelectedCabinet(cabinetId)
    const cabinet = cabinets.find(c => c.id === cabinetId)
    
    const initialMessages: Message[] = [
      {
        id: 1,
        text: `Bonjour, je suis [Votre Pr√©nom et Nom], du cabinet ${cabinet?.name}. Je vous contacte au sujet des indemnit√©s journali√®res hospitali√®res.`,
        sender: "conseiller",
        timestamp: new Date(Date.now() - 10000)
      }
    ]
    
    setMessages(initialMessages)
    setStepHistory({1: initialMessages})
    setCurrentStep(1)
  }

  const resetConversation = () => {
    setSelectedCabinet(null)
    setCurrentStep(1)
    setMessages([])
    setStepHistory({})
    setShowLexique(false)
    setShowIBANValidator(false)
    setShowNIRValidator(false)
    setIbanInput("")
    setNirInput("")
    setIbanResult(null)
    setNirResult(null)
  }

  // Fonction pour sauvegarder les messages de l'√©tape actuelle
  const saveStepMessages = (step: number, messagesToSave: Message[]) => {
    setStepHistory(prev => ({
      ...prev,
      [step]: messagesToSave
    }))
  }

  // Fonction pour naviguer vers une √©tape sp√©cifique
  const goToStep = (step: number) => {
    if (step < 1 || step > 11) return
    
    // Sauvegarder les messages de l'√©tape actuelle avant de changer
    saveStepMessages(currentStep, messages)
    
    // Charger les messages de la nouvelle √©tape
    const targetMessages = stepHistory[step] || []
    setMessages(targetMessages)
    setCurrentStep(step)
  }

  // Fonction pour aller √† l'√©tape pr√©c√©dente
  const goToPreviousStep = () => {
    if (currentStep > 1) {
      goToStep(currentStep - 1)
    }
  }

  // Fonction pour aller √† l'√©tape suivante
  const goToNextStep = () => {
    if (currentStep < 11) {
      goToStep(currentStep + 1)
    }
  }

  // Fonction de validation IBAN am√©lior√©e
  const parseIbanFR = (iban: string) => {
    const result = { 
      valid: false, 
      error: "",
      country: "",
      bankCode: "",
      branchCode: "",
      accountNumber: "",
      key: "",
      ribKey: "",
      bic: ""
    };
    // Normalise l'IBAN : enl√®ve espaces et passe en majuscules
    const clean = iban.replace(/\s+/g, '').toUpperCase();
    // V√©rifie format basique : FR + 2 chiffres + 5 chiffres banque + 5 guichet + 11 alphanum compte + 2 chiffres cl√©
    if (!/^FR\d{2}\d{5}\d{5}[A-Z0-9]{11}\d{2}$/.test(clean)) {
      result.error = "Format IBAN invalide ou non fran√ßais";
      return result;
    }
    // V√©rifie longueur (27 pour la France)
    if (clean.length !== 27) {
      result.error = "Longueur IBAN incorrecte pour la France";
      return result;
    }
    // Calcul modulo 97 : d√©place les 4 premiers chars √† la fin
    const rearr = clean.slice(4) + clean.slice(0, 4);
    // Convertit lettres en chiffres (A=10,...Z=35)
    const converted = rearr.replace(/[A-Z]/g, c => (c.charCodeAt(0) - 55).toString());
    // Calcul mod 97 par morceaux (√©vite grands entiers)
    let checksum = parseInt(converted.slice(0, 2), 10);
    for (let i = 2; i < converted.length; i += 7) {
      const fragment = checksum.toString() + converted.substring(i, i + 7);
      checksum = parseInt(fragment, 10) % 97;
    }
    if (checksum !== 1) {
      result.error = "IBAN invalide (cl√© de contr√¥le incorrecte)";
      return result;
    }
    // Extraction des √©l√©ments
    result.valid = true;
    result.country = clean.slice(0, 2);        // FR
    result.bankCode = clean.slice(4, 9);       // 5 chiffres code banque
    result.branchCode = clean.slice(9, 14);    // 5 chiffres code guichet
    result.accountNumber = clean.slice(14, 25); // 11 caract√®res compte
    result.ribKey = clean.slice(25, 27);       // 2 chiffres cl√© RIB
    // Correspondance code banque -> BIC 
    const bicMap = {
      "30004": "BNPAFRPP",    // BNP PARIBAS (si√®ge)
      "30003": "SOGEFRPP",    // SOCIETE GENERALE (si√®ge)
      "10207": "BCEEFRPP",    // BPCE (Banques Populaire / Caisse d'Epargne) - g√©n√©rique
      "10203": "CEPAFRPP",    // CAISSE D'EPARGNE (exemple g√©n√©rique)
      "30002": "CRLYFRPP",    // LCL / CREDIT LYONNAIS
      "20041": "PSSTFRPP",    // LA BANQUE POSTALE
      "30056": "HSBCFRPP",    // HSBC FRANCE (g√©n√©rique)
      "10107": "BREDFRPP",    // BRED Banque Populaire
      "10106": "AGRIFRPP",    // CREDIT AGRICOLE (souvent AGRIFRPP + suffixe r√©gional)
      "10216": "CMCIDEDD",    // CIC / Cr√©dit Mutuel (ex. CIC / CM)
      "10206": "CCBPFRPP",    // Banque Populaire (ex. CCBPFRPP...)
      "10101": "PSSTFRPP",    // autre variante Banque Postale
      "30066": "CMCI FRPP".replace(/\s+/g,""), // Cr√©dit Mutuel / CIC (exemple)
      "30008": "BNPAFRPP",    // autre code possible li√© √† BNP
      "10250": "BOUSFRPP",    // Boursorama (si√®ge : BOUSFRPPXXX)
      "30059": "BNPAFRPP",    // variantes BNP
      "10102": "SOGEFRPP",    // variantes Soc Gen
      "10140": "NATXFRPP",    // NATIXIS
      "10506": "CAGLFRPP",    // Exemple CA Loire
      "11346": "ARBPFRPP",    // Exemple - √† confirmer par source
      "10201": "AXABFRPP",    // Exemple AXA Bank France (AXABFRPP)
      "30092": "BDFEFRPP",    // BANQUE DE FRANCE
      "10104": "LCLFRPP",     // LCL variants
    };
    result.bic = bicMap[result.bankCode] || null;
    return result;
  }

  // Fonction de validation NIR am√©lior√©e
  const parseNIR = (nir: string) => {
    const clean = nir.replace(/\s+/g, ''); 
    if (!/^[12][0-9]{2}[0-1][0-9][0-9A-Z]{2}[0-9]{3}[0-9]{3}[0-9]{2}$/.test(clean)) {
      return { valid: false, error: "Format NIR incorrect" };
    }
    const sex = clean.charAt(0);            // 1 ou 2
    const year = clean.slice(1, 3);         // ex. "55"
    const month = clean.slice(3, 5);        // "01"..."12"
    let dept = clean.slice(5, 7);           // "01"..."95", ou "2A"/"2B", ou "99"
    const commune = clean.slice(7, 10);     // code commune ou pays (3 chif)
    const ordre = clean.slice(10, 13);      // "001"..."999"
    const key = clean.slice(13, 15);        // cl√© de contr√¥le (2 chif)
    // Pour le calcul de la cl√©, remplacer "2A"/"2B" par chiffres
    let deptNum = dept;
    if (dept === "2A") deptNum = "19";
    if (dept === "2B") deptNum = "18";
    // Construit la partie num√©rique (13 chiffres) et calcule modulo
    const num13 = sex + year + month + deptNum + commune + ordre;
    const mod = parseInt(num13, 10) % 97;
    const computedKey = 97 - mod;
    // Compare avec la cl√© fournie
    const valid = (computedKey === parseInt(key, 10));
    return {
      valid,
      sexe: sex,
      annee: year,
      mois: month,
      departement: dept,
      commune: commune,
      ordre: ordre,
      cle: key
    };
  }

  const handleIBANValidation = () => {
    if (!ibanInput.trim()) {
      setIbanResult("Veuillez entrer un IBAN")
      return
    }
    const result = parseIbanFR(ibanInput)
    if (result.valid) {
      setIbanResult(`‚úÖ IBAN valide\n\nD√©tails :\n` +
        `‚Ä¢ Pays : ${result.country}\n` +
        `‚Ä¢ Code banque : ${result.bankCode}\n` +
        `‚Ä¢ Code guichet : ${result.branchCode}\n` +
        `‚Ä¢ Num√©ro de compte : ${result.accountNumber}\n` +
        `‚Ä¢ Cl√© RIB : ${result.ribKey}` +
        (result.bic ? `\n‚Ä¢ BIC : ${result.bic}` : ''))
    } else {
      setIbanResult(`‚ùå ${result.error}`)
    }
  }

  const handleNIRValidation = () => {
    if (!nirInput.trim()) {
      setNirResult("Veuillez entrer un NIR")
      return
    }
    const result = parseNIR(nirInput)
    if (result.valid) {
      const sexeText = result.sexe === '1' ? 'Homme' : 'Femme'
      setNirResult(`‚úÖ NIR valide\n\nD√©tails :\n` +
        `‚Ä¢ Sexe : ${sexeText} (${result.sexe})\n` +
        `‚Ä¢ Ann√©e de naissance : ${result.annee}\n` +
        `‚Ä¢ Mois de naissance : ${result.mois}\n` +
        `‚Ä¢ D√©partement : ${result.departement}\n` +
        `‚Ä¢ Commune : ${result.commune}\n` +
        `‚Ä¢ Num√©ro d'ordre : ${result.ordre}\n` +
        `‚Ä¢ Cl√© de contr√¥le : ${result.cle}`)
    } else {
      setNirResult(`‚ùå ${result.error}`)
    }
  }

  // Composant IBAN Validator
  const IBANValidator = () => (
    <Card>
      <CardHeader>
        <CardTitle className="text-lg font-semibold text-gray-800 flex items-center gap-2">
          üè¶ Validateur IBAN
        </CardTitle>
        <p className="text-sm text-gray-600">
          Entrez un IBAN pour v√©rifier sa validit√© selon les normes internationales
        </p>
      </CardHeader>
      <CardContent className="space-y-4">
        <div className="space-y-2">
          <label className="text-sm font-medium text-gray-700">IBAN √† valider</label>
          <input
            type="text"
            placeholder="FR14 2004 1010 0505 0001 3M02 606"
            value={ibanInput}
            onChange={(e) => setIbanInput(e.target.value)}
            className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent text-sm"
          />
          <p className="text-xs text-gray-500">
            Exemple : FR14 2004 1010 0505 0001 3M02 606
          </p>
        </div>
        
        <Button 
          onClick={handleIBANValidation}
          className="w-full bg-green-600 hover:bg-green-700 text-white"
        >
          Valider l'IBAN
        </Button>
        
        {ibanResult && (
          <Card className={`p-3 ${
            ibanResult.includes("‚úÖ") ? "bg-green-50 border-green-200" : "bg-red-50 border-red-200"
          }`}>
            <p className={`text-sm font-medium whitespace-pre-line ${
              ibanResult.includes("‚úÖ") ? "text-green-800" : "text-red-800"
            }`}>
              {ibanResult}
            </p>
          </Card>
        )}
        
        <Card className="bg-blue-50 border-blue-200">
          <CardContent className="p-3">
            <h4 className="text-sm font-semibold text-blue-800 mb-1">‚ÑπÔ∏è Informations IBAN</h4>
            <ul className="text-xs text-blue-700 space-y-1">
              <li>‚Ä¢ Format fran√ßais : FR + 2 chiffres (cl√©) + 5 chiffres (banque) + 5 chiffres (guichet) + 11 caract√®res (compte) + 2 chiffres (cl√© RIB)</li>
              <li>‚Ä¢ Longueur totale : 27 caract√®res pour la France</li>
              <li>‚Ä¢ Accepte les espaces et majuscules/minuscules</li>
              <li>‚Ä¢ Valide la structure math√©matique avec modulo 97</li>
              <li>‚Ä¢ D√©tecte automatiquement la banque et le code BIC correspondant</li>
            </ul>
          </CardContent>
        </Card>
      </CardContent>
    </Card>
  )

  // Composant NIR Validator
  const NIRValidator = () => (
    <Card>
      <CardHeader>
        <CardTitle className="text-lg font-semibold text-gray-800 flex items-center gap-2">
          üÜî Validateur NIR
        </CardTitle>
        <p className="text-sm text-gray-600">
          Entrez un num√©ro de s√©curit√© sociale fran√ßais pour v√©rifier sa validit√©
        </p>
      </CardHeader>
      <CardContent className="space-y-4">
        <div className="space-y-2">
          <label className="text-sm font-medium text-gray-700">NIR √† valider</label>
          <input
            type="text"
            placeholder="285072A01312345"
            value={nirInput}
            onChange={(e) => setNirInput(e.target.value)}
            className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent text-sm"
          />
          <p className="text-xs text-gray-500">
            Exemple : 255081416802538
          </p>
        </div>
        
        <Button 
          onClick={handleNIRValidation}
          className="w-full bg-purple-600 hover:bg-purple-700 text-white"
        >
          Valider le NIR
        </Button>
        
        {nirResult && (
          <Card className={`p-3 ${
            nirResult.includes("‚úÖ") ? "bg-green-50 border-green-200" : "bg-red-50 border-red-200"
          }`}>
            <p className={`text-sm font-medium whitespace-pre-line ${
              nirResult.includes("‚úÖ") ? "text-green-800" : "text-red-800"
            }`}>
              {nirResult}
            </p>
          </Card>
        )}
        
        <Card className="bg-purple-50 border-purple-200">
          <CardContent className="p-3">
            <h4 className="text-sm font-semibold text-purple-800 mb-1">‚ÑπÔ∏è Informations NIR</h4>
            <ul className="text-xs text-purple-700 space-y-1">
              <li>‚Ä¢ Format : 15 caract√®res (sexe + ann√©e + mois + d√©partement + commune + ordre + cl√©)</li>
              <li>‚Ä¢ Sexe : 1 (homme) ou 2 (femme)</li>
              <li>‚Ä¢ Ann√©e : 2 derniers chiffres de l'ann√©e de naissance</li>
              <li>‚Ä¢ Mois : 01 √† 12 (mois de naissance)</li>
              <li>‚Ä¢ D√©partement : 01 √† 95, 2A/2B (Corse), ou 99 (√©tranger)</li>
              <li>‚Ä¢ G√®re les d√©partements Corses (2A‚Üí19, 2B‚Üí18) pour le calcul de la cl√©</li>
              <li>‚Ä¢ Valide la cl√© de contr√¥le avec modulo 97</li>
            </ul>
          </CardContent>
        </Card>
      </CardContent>
    </Card>
  )

  const getCabinetData = () => {
    return cabinets.find(c => c.id === selectedCabinet)
  }

  const getCabinetName = () => {
    return getCabinetData()?.name || ""
  }

  const getCabinetColors = () => {
    return getCabinetData()?.colors || cabinets[0].colors
  }

  const scriptSteps: Record<number, ScriptStep> = {
    1: {
      id: 1,
      title: "1. SALUTATION & PR√âSENTATION",
      conseillerMessage: `Bonjour, je suis [Votre Pr√©nom et Nom], du cabinet ${getCabinetName()}. Je vous contacte au sujet des indemnit√©s journali√®res hospitali√®res.`,
      categories: [
        { id: "interesse", title: "Int√©ress√©", description: "Le client est int√©ress√© par la proposition", objectionResponse: "C'est une excellente nouvelle ! Cette garantie est vraiment avantageuse car elle vous prot√®ge financi√®rement d√®s le premier jour d'hospitalisation. Permettez-moi de vous expliquer plus en d√©tail comment cela fonctionne concr√®tement." },
        { id: "mecontent", title: "M√©content", description: "Le client est m√©content ou agac√©", objectionResponse: "Je comprends parfaitement votre r√©action. Sachez que je vous contacte simplement pour vous informer d'une protection importante, sans aucun engagement de votre part. Je ne prendrai que quelques minutes de votre temps, et si cela ne vous int√©resse pas, nous en resterons l√†." },
        { id: "curieux", title: "Curieux", description: "Le client veut savoir de quoi il s'agit", objectionResponse: "C'est une excellente question ! Il s'agit d'une garantie d'indemnit√©s journali√®res qui vous verse une somme directement sur votre compte en cas d'hospitalisation. C'est tr√®s simple et tr√®s utile. Je vais vous expliquer les d√©tails dans un instant." },
        { id: "occupe", title: "Occup√©", description: "Le client n'a pas le temps", objectionResponse: "Je comprends que vous √™tes occup√©. Je serai tr√®s bref, moins de 2 minutes pour vous expliquer l'essentiel. Si cela ne vous int√©resse pas, nous en resterons l√†, sans aucun engagement. Vous verrez, c'est vraiment int√©ressant pour votre protection." },
        { id: "sceptique", title: "Sceptique", description: "Le client doute de l'appel", objectionResponse: `Je comprends votre prudence. Sachez que je suis un conseiller certifi√© du cabinet ${getCabinetName()} et que nous travaillons avec des assureurs reconnus. Je peux vous envoyer un email de confirmation apr√®s notre conversation pour plus de transparence.` },
        { id: "deja_couvert", title: "D√©j√† couvert", description: "Le client pense √™tre d√©j√† prot√©g√©", objectionResponse: "C'est une excellente nouvelle d'avoir d√©j√† une protection ! Cependant, beaucoup de nos clients d√©couvrent que leur couverture actuelle a des limites ou des franchises importantes. Je peux vous expliquer rapidement en quoi notre formule compl√®te vos garanties existantes." },
        { id: "urgence", title: "Urgence", description: "Le client est press√©", objectionResponse: "Je comprends que vous √™tes press√©. Je vais faire tr√®s court : cette garantie vous verse jusqu'√† 180‚Ç¨ par jour en cas d'hospitalisation, sans franchise. Je vous envoie un email avec tous les d√©tails et vous pouvez y r√©fl√©chir plus tard. D'accord ?" }
      ]
    },
    2: {
      id: 2,
      title: "2. V√âRIFICATION DE LA R√âCEPTION DU COURRIER",
      conseillerMessage: "Vous avez sans doute re√ßu un courrier √† ce sujet ‚Äî l'avez-vous d√©j√† re√ßu ?",
      categories: [
        { id: "oui", title: "Oui, re√ßu", description: "Le client confirme avoir re√ßu le courrier", objectionResponse: "Parfait ! Cela facilite notre conversation. Comme indiqu√© dans ce courrier, cette garantie vous offre une protection financi√®re essentielle en cas d'hospitalisation. Avez-vous pu prendre le temps de lire les d√©tails ou souhaitez-vous que je vous les r√©sume ?" },
        { id: "non", title: "Non, pas re√ßu", description: "Le client n'a pas re√ßu le courrier", objectionResponse: "Aucun probl√®me, je vais vous l'expliquer bri√®vement. Il s'agit d'une garantie d'indemnit√©s journali√®res qui vous verse une somme directement sur votre compte en cas d'hospitalisation. C'est une protection tr√®s importante que je vais vous d√©tailler maintenant." },
        { id: "sceptique", title: "Sceptique", description: "Le client doute ou demande des pr√©cisions", objectionResponse: "Je comprends votre prudence. Ce courrier est officiel et concerne une garantie r√©elle d'indemnit√©s journali√®res propos√©e par notre partenaire assureur Klasseur. Je peux vous confirmer que c'est une offre l√©gitime et avantageuse pour votre protection financi√®re." },
        { id: "raccroche", title: "Raccroche", description: "Le client veut raccrocher", objectionResponse: "Je comprends votre r√©action, mais avant de partir, sachez que cette garantie pourrait vous √©viter des difficult√©s financi√®res importantes en cas d'hospitalisation. Deux minutes seulement pour votre s√©curit√© financi√®re, et si cela ne vous int√©resse pas, je vous laisse tranquille." },
        { id: "oublie", title: "Oubli√©", description: "Le client a oubli√© le courrier", objectionResponse: "C'est tout √† fait normal, on re√ßoit tellement de courriers ! Je vais vous le r√©sumer rapidement : il s'agit d'une protection qui vous verse jusqu'√† 180‚Ç¨ par jour en cas d'hospitalisation. C'est une garantie tr√®s utile que je vais vous d√©tailler maintenant." },
        { id: "jete", title: "Jet√©", description: "Le client a jet√© le courrier", objectionResponse: "Je comprends, on jette beaucoup de publicit√©s. Cependant, ce courrier contenait une information importante sur une protection financi√®re qui pourrait vous √™tre tr√®s utile. Je vais vous expliquer en 2 minutes pourquoi cette garantie m√©rite votre attention." },
        { id: "pas_interesse", title: "Pas int√©ress√©", description: "Le client n'est pas int√©ress√© par le courrier", objectionResponse: "Je comprends votre r√©action. Cependant, avant de prendre une d√©cision d√©finitive, laissez-moi vous expliquer en 30 secondes pourquoi cette garantie pourrait changer la donne pour vous en cas de probl√®me de sant√©. Vous verrez, c'est vraiment diff√©rent des assurances classiques." }
      ]
    },
    3: {
      id: 3,
      title: "3. EXPLICATION DE LA GARANTIE",
      conseillerMessage: "Petite explication rapide : Ce courrier concerne une garantie d'allocations journali√®res, vers√©e d√®s le mois prochain en cas d'hospitalisation pour maladie, accident ou agression. Il s'agit d'un versement en esp√®ces, net d'imp√¥t, libre d'utilisation. Ce n'est pas un remboursement, mais un virement direct sur votre compte.",
      categories: [
        { id: "compris", title: "A compris", description: "Le client a bien compris l'explication", objectionResponse: "Excellent ! Vous voyez donc l'int√©r√™t de cette garantie. C'est pr√©cis√©ment pour cela que je vous contacte aujourd'hui - pour vous offrir cette protection financi√®re essentielle. Passons maintenant aux d√©tails concrets de la formule qui vous est propos√©e." },
        { id: "questions", title: "Des questions", description: "Le client a des questions suppl√©mentaires", objectionResponse: "C'est une tr√®s bonne chose d'avoir des questions ! Cela montre votre int√©r√™t pour votre protection. Quelles sont vos questions pr√©cises ? Je suis l√† pour y r√©pondre clairement et vous donner toutes les informations n√©cessaires pour faire un choix √©clair√©." },
        { id: "doute", title: "Douteux", description: "Le client est sceptique sur le produit", objectionResponse: "Je comprends votre scepticisme. C'est sain de se poser des questions. Sachez que cette garantie est propos√©e par Klasseur, un assureur reconnu, et qu'elle a d√©j√† aid√© de nombreuses personnes √† traverser des p√©riodes d'hospitalisation plus sereinement. Je peux vous donner des exemples concrets." },
        { id: "refus", title: "Refus", description: "Le client refuse le principe", objectionResponse: "Je comprends votre position. Cependant, avant de prendre une d√©cision d√©finitive, permettez-moi de vous donner un exemple concret : une hospitalisation de 5 jours vous co√ªterait facilement plus en frais non couverts que le co√ªt annuel de cette garantie. C'est un investissement dans votre tranquillit√©." },
        { id: "combien", title: "Combien ?", description: "Le client demande le montant", objectionResponse: "C'est la question la plus importante ! Les montants varient selon le type d'hospitalisation : 60‚Ç¨/jour pour maladie, 120‚Ç¨/jour pour accident, et jusqu'√† 180‚Ç¨/jour pour agression. Je vais vous d√©tailler les tarifs dans un instant, mais sachez que c'est tr√®s abordable par rapport √† la protection offerte." },
        { id: "comment_ca_marche", title: "Comment √ßa marche ?", description: "Le client veut comprendre le fonctionnement", objectionResponse: "Excellente question ! C'est tr√®s simple : en cas d'hospitalisation, vous d√©clarez l'incident et nous versons directement les indemnit√©s sur votre compte. Pas de papier √† remplir, pas de justificatifs complexes. Juste une protection efficace quand vous en avez besoin." },
        { id: "pourquoi_moi", title: "Pourquoi moi ?", description: "Le client se demande pourquoi il est contact√©", objectionResponse: "C'est une excellente question ! Vous avez √©t√© s√©lectionn√© car vous correspondez au profil de personnes qui pourraient b√©n√©ficier de cette protection. Beaucoup de gens sous-estiment les co√ªts indirects d'une hospitalisation, et nous voulons vous √©viter cette difficult√© financi√®re." }
      ]
    },
    4: {
      id: 4,
      title: "4. TRAITEMENT DES OBJECTIONS",
      conseillerMessage: "Avez-vous des questions ou des pr√©occupations concernant cette garantie d'indemnit√©s journali√®res hospitali√®res ?",
      categories: [
        { id: "pas_besoin", title: "Je n'en ai pas besoin", description: "Le client pense ne pas avoir besoin de cette garantie", objectionResponse: "Tout le monde a besoin d'√™tre pris en charge en cas de maladie, d'accident ou d'agression, d'autant plus que c'est de l'argent qui sera directement vers√© sur votre compte‚Ä¶" },
        { id: "veux_reflechir", title: "Je veux r√©fl√©chir", description: "Le client demande du temps pour r√©fl√©chir", objectionResponse: "C'est tout √† votre honneur, c'est normal de r√©fl√©chir et c'est pour cette raison que la loi vous donne 14 jours de R√©flexion. Ce que nous faisons l√† c'est de vous aider √† recevoir votre contrat chez vous avec tous les d√©tails et en cas de besoin n'h√©sitez surtout pas √† rentrer en contact avec nous‚Ä¶" },
        { id: "deja_couvert_obj", title: "Je suis d√©j√† couvert", description: "Le client pense d√©j√† avoir une couverture", objectionResponse: "Par quoi √™tes-vous couvert ? Parce que vous n'avez pas encore activ√© vos indemnit√©s journali√®res hospitali√®res qui prendront effet √† partir du 1er du mois prochain et c'est la raison de notre appel‚Ä¶" },
        { id: "trop_jeune", title: "Je suis trop jeune", description: "Le client pense √™tre trop jeune pour s'en pr√©occuper", objectionResponse: "Peu importe votre √¢ge ou ce que vous faites-vous pourriez √™tre hospitalis√© suite √† une maladie, un accident ou une agression donc bien s√ªr vous √™tes concern√©‚Ä¶ et si vous avez vos indemnit√©s d√©j√† mises en place √ßa sera de l'argent libre d'utilisation qui sera directement vers√© sur votre compte pour chaque journ√©e pass√©e √† l'h√¥pital‚Ä¶" },
        { id: "pas_temps_obj", title: "Je n'ai pas le temps", description: "Le client n'a pas de temps maintenant", objectionResponse: "C'est vrai que je vous prends au d√©pourvu mais il est vraiment tr√®s important qu'on termine la proc√©dure aujourd'hui donc accordez moi juste 2 ou 3 minutes vite fait et je vous lib√®re‚Ä¶" },
        { id: "bonne_sante", title: "Je suis en bonne sant√©", description: "Le client est en bonne sant√©", objectionResponse: "C'est une bonne nouvelle que vous soyez en bonne sant√© c'est parfait mais il y a des cas de maladie, d'accident ou d'agression qui vous surprennent et si vous avez vos indemnit√©s d√©j√† mises en place √ßa sera de l'argent libre d'utilisation qui sera directement vers√© sur votre compte pour chaque journ√©e pass√©e √† l'h√¥pital‚Ä¶" },
        { id: "verrai_plus_tard", title: "Je verrai plus tard", description: "Le client veut reporter", objectionResponse: "Je comprends mais cela fait un bon moment que nous tentons de rentrer en contact avec vous mais en vain, c'est une opportunit√© aujourd'hui qu'on a de mettre en place votre garantie et de vous envoyer le tout rapidement par courrier donc je vais vous prendre 2 ou 3 minutes vite fait pour m'assurer de vos informations‚Ä¶" }
      ]
    },
    5: {
      id: 5,
      title: "5. R√âPONSES AUX OBJECTIONS SP√âCIFIQUES",
      conseillerMessage: "Permettez-moi de r√©pondre √† vos √©ventuelles pr√©occupations concernant cette Protection essentielle.",
      categories: [
        { id: "mutuelle_couvre", title: "Ma mutuelle me couvre d√©j√†", description: "Le client pense que sa mutuelle suffit", objectionResponse: "C'est tr√®s important que vous ayez votre mutuelle d'ailleurs moi √©galement j'ai ma mutuelle mais j'ai en plus mes indemnit√©s journali√®res hospitali√®res dans ce sens o√π les indemnit√©s viennent compl√©ter ce que la mutuelle ne prend pas en charge comme les d√©passements d'honoraire et les restes √† charge‚Ä¶" },
        { id: "fonctionnaire", title: "Je suis fonctionnaire", description: "Le client est fonctionnaire et pense ne pas avoir besoin", objectionResponse: "Peu importe votre statut vous pourriez √™tre hospitalis√© suite √† une maladie, un accident ou une agression donc bien s√ªr vous √™tes concern√©‚Ä¶ et si vous avez vos indemnit√©s d√©j√† mises en place √ßa sera de l'argent libre d'utilisation qui sera directement vers√© sur votre compte pour chaque journ√©e pass√©e √† l'h√¥pital‚Ä¶" },
        { id: "pas_info_tel", title: "Je ne donne pas d'info par t√©l√©phone", description: "Le client refuse de donner des informations par t√©l√©phone", objectionResponse: "Je comprends, c'est normal, mais les informations sensibles comme les num√©ros de la carte bancaire donc rassurez-vous, en plus vous allez tout recevoir par mail et par courrier‚Ä¶" },
        { id: "connait_pas_cabinet", title: "Je ne connais pas votre cabinet", description: "Le client ne conna√Æt pas le cabinet", objectionResponse: `Nous sommes le cabinet ${getCabinetName()} partenaire √† plusieurs compagnies d'assurances et nous avons un code ORIAS qui est le ${selectedCabinet === 'php' ? '23000570' : '24002437'}, que vous soyez rassur√© je vous invite √† le v√©rifier sur le site officiel de l'ORIAS.` },
        { id: "pas_signe_sans_rencontrer", title: "Je ne signe rien sans rencontrer quelqu'un", description: "Le client veut rencontrer quelqu'un physiquement", objectionResponse: "Je comprends votre m√©fiance et c'est normal, mais aujourd'hui nous sommes √† l'√®re des nouvelles technologies donc plus besoin de se d√©placer, en plus la signature √©lectronique a la m√™me valeur juridique que la signature manuscrite et vous est recevoir les documents contractuels le plus rapidement possible‚Ä¶" },
        { id: "trop_cher", title: "C'est trop cher", description: "Le client trouve le tarif trop √©lev√©", objectionResponse: "C'est vrai qu'on ne conna√Æt pas vos finances et pour ce fait on doit vous faire un geste commercial en r√©duisant la cotisation pour vous‚Ä¶" },
        { id: "envoyez_courrier", title: "Envoyez-moi un courrier", description: "Le client veut recevoir un courrier", objectionResponse: "Bien s√ªr c'est ce que nous sommes en train de faire mais ce que vous recevrez le plus rapidement possible par mail et par courrier, je vous laisse juste le num√©ro de mon p√¥le et si besoin nous devons absolument terminer la proc√©dure maintenant‚Ä¶" }
      ]
    },
    6: {
      id: 6,
      title: "6. D√âTAIL DE LA FORMULE PR√âVOYANCE",
      conseillerMessage: "La garantie propos√©e, assur√©e par Klasseur : 60‚Ç¨/jour pour hospitalisation maladie, 120‚Ç¨/jour pour accident, 180‚Ç¨/jour pour agression. Tarif : [xx‚Ç¨]/mois + 10‚Ç¨ de frais de dossier (pr√©l√®vement unique).",
      categories: [
        { id: "accepte_tarif", title: "Accepte le tarif", description: "Le client trouve le tarif acceptable", objectionResponse: "C'est une excellente nouvelle ! Pour ce tarif, vous b√©n√©ficiez d'une protection compl√®te avec des montants significatifs. C'est un investissement tr√®s raisonnable pour votre tranquillit√© d'esprit. Passons maintenant aux informations n√©cessaires pour la mise en place rapide de votre dossier." },
        { id: "garanties", title: "Garanties", description: "Le client s'int√©resse aux garanties", objectionResponse: "Vous avez raison de vous int√©resser aux garanties ! C'est le plus important. Cette formule vous couvre pour tous les types d'hospitalisation : maladie, accident, agression. Les montants sont parmi les plus √©lev√©s du march√© pour ce type de garantie, sans franchise." },
        { id: "delai_carence", title: "D√©lai de carence", description: "Le client demande s'il y a un d√©lai d'attente", objectionResponse: "Excellente question ! Contrairement √† beaucoup d'assurances, il n'y a pas de d√©lai de carence. Vous √™tes prot√©g√© d√®s la souscription effective. C'est un avantage majeur de notre formule : une protection imm√©diate sans p√©riode d'attente." },
        { id: "franchise", title: "Franchise", description: "Le client demande s'il y a une franchise", objectionResponse: "C'est une question tr√®s importante ! Il n'y a aucune franchise √† payer. En cas d'hospitalisation, vous recevez la totalit√© des montants garantis : 60‚Ç¨, 120‚Ç¨ ou 180‚Ç¨ par jour selon le cas, sans aucun montant √† d√©duire. C'est une protection compl√®te et sans surprise." },
        { id: "exclusions", title: "Exclusions", description: "Le client demande les exclusions", objectionResponse: "Tr√®s bonne question ! Les exclusions sont limit√©es aux cas pr√©existants connus et non d√©clar√©s, et aux hospitalisations volontaires. Pour toutes les situations impr√©vues (maladie, accident, agression), vous √™tes couvert sans restriction. Je peux vous envoyer la liste compl√®te par email." },
        { id: "versement", title: "Versement", description: "Le client demande comment se fait le versement", objectionResponse: "Excellente question ! Le versement se fait directement sur votre compte bancaire en moins de 48h apr√®s votre d√©claration d'hospitalisation. Pas de papier √† remplir, pas de justificatifs complexes. Juste une protection efficace et rapide quand vous en avez besoin." },
        { id: "couverture_mondiale", title: "Couverture mondiale", description: "Le client demande si c'est valable √† l'√©tranger", objectionResponse: "Oui, absolument ! Cette garantie offre une couverture mondiale, ce qui signifie que vous √™tes prot√©g√© o√π que vous soyez dans le monde. Que vous soyez en France, en voyage ou en expatriation, vous b√©n√©ficiez de la m√™me protection et des m√™mes versements rapides." }
      ]
    },
    7: {
      id: 7,
      title: "7. VALIDATION BUDG√âTAIRE ET ADAPTATION DE L'OFFRE",
      conseillerMessage: "Pour adapter au mieux notre offre √† votre situation, quel est votre budget mensuel pour ce type de protection ? Cela me permettra d'ajuster la formule si n√©cessaire.",
      categories: [
        { id: "budget_suffisant", title: "Budget suffisant", description: "Le client a un budget suffisant pour l'offre actuelle", objectionResponse: "Excellent ! Votre budget permet de maintenir la formule compl√®te avec toutes ses garanties. C'est la meilleure option pour une protection optimale. Nous pouvons donc conserver les montants de 60‚Ç¨/jour pour maladie, 120‚Ç¨/jour pour accident et 180‚Ç¨/jour pour agression." },
        { id: "budget_limite", title: "Budget limit√©", description: "Le client a un budget limit√©", objectionResponse: "Je comprends parfaitement. Pour respecter votre budget, je peux vous proposer une formule adapt√©e avec des montants l√©g√®rement inf√©rieurs : 40‚Ç¨/jour pour maladie, 80‚Ç¨/jour pour accident et 120‚Ç¨/jour pour agression. Cela reste une protection tr√®s solide avec un tarif ajust√© √† votre budget." },
        { id: "budget_elev√©", title: "Budget √©lev√©", description: "Le client a un budget plus √©lev√©", objectionResponse: "C'est une excellente nouvelle ! Avec votre budget, nous pouvons m√™me envisager une formule premium avec des montants augment√©s : 80‚Ç¨/jour pour maladie, 150‚Ç¨/jour pour accident et 220‚Ç¨/jour pour agression. Vous auriez une protection renforc√©e pour une tranquillit√© d'esprit maximale." },
        { id: "pas_de_budget", title: "Pas de budget d√©fini", description: "Le client n'a pas de budget pr√©cis", objectionResponse: "Aucun probl√®me ! Je vais vous proposer la formule standard qui offre le meilleur rapport qualit√©-prix : 60‚Ç¨/jour pour maladie, 120‚Ç¨/jour pour accident et 180‚Ç¨/jour pour agression. Si apr√®s r√©flexion vous souhaitez ajuster, nous pourrons toujours modifier l'offre par la suite." },
        { id: "veut_prix_fixe", title: "Veut un prix fixe", description: "Le client demande un prix mensuel fixe", objectionResponse: "Parfait ! Je peux vous proposer un tarif mensuel fixe de [xx]‚Ç¨ qui inclut toutes les garanties sans surprise. Ce montant restera constant pendant toute la dur√©e du contrat, ce qui vous permet de budg√©tiser facilement votre protection sur le long terme." },
        { id: "compare_concurrence", title: "Compare avec concurrence", description: "Le client compare avec d'autres offres", objectionResponse: "C'est tr√®s judicieux de comparer ! Ce qui distingue notre offre, c'est la flexibilit√© des montants et l'absence de franchise. Nous pouvons adapter les garanties √† votre budget tout en maintenant une couverture compl√®te. Avez-vous des offres sp√©cifiques que vous aimeriez que nous analysons ensemble ?" },
        { id: "veut_remise", title: "Veut une remise", description: "Le client demande une r√©duction", objectionResponse: "Je comprends votre demande. Plut√¥t qu'une remise temporaire, je pr√©f√®re vous proposer une formule durable adapt√©e √† votre budget avec des garanties ajust√©es. Ainsi, vous b√©n√©ficiez d'une protection coh√©rente et p√©renne sans augmentation surprise par la suite. Quelle fourchette de budget vous conviendrait ?" }
      ]
    },
    8: {
      id: 8,
      title: "8. COLLECTE DES INFORMATIONS",
      conseillerMessage: "Pour finaliser votre dossier, j'ai besoin de confirmer ces √©l√©ments : Nom, pr√©nom, date de naissance, adresse, e-mail, t√©l√©phone, num√©ro de s√©curit√© sociale. Si vous √™tes d√©j√† assur√©, seul le n¬∞ de s√©curit√© sociale est n√©cessaire pour v√©rification.",
      categories: [
        { id: "cooperative", title: "Coop√©ratif", description: "Le client donne ses informations", objectionResponse: "Merci beaucoup pour votre confiance ! Ces informations sont essentielles pour la mise en place rapide de votre garantie. Je vous confirme que toutes vos donn√©es sont prot√©g√©es et utilis√©es uniquement pour votre dossier. Nous allons pouvoir proc√©der tr√®s rapidement maintenant." },
        { id: "reticent", title: "R√©ticent", description: "Le client h√©site √† donner ses infos", objectionResponse: "Je comprends parfaitement votre r√©ticence. Sachez que ces informations sont strictement n√©cessaires pour l'√©tablissement de votre contrat et sont prot√©g√©es par le secret professionnel. Vous pouvez me donner uniquement les informations indispensables pour commencer, et nous compl√©terons le reste plus tard." },
        { id: "securite", title: "S√©curit√©", description: "Le client s'inqui√®te de la s√©curit√© des donn√©es", objectionResponse: "Votre pr√©occupation est tout √† fait l√©gitime. Je vous confirme que toutes vos donn√©es sont prot√©g√©es par le RGPD et le secret professionnel. Elles ne sont utilis√©es que pour votre dossier et ne seront jamais partag√©es avec des tiers sans votre consentement." },
        { id: "pas_maintenant", title: "Pas maintenant", description: "Le client veut reporter", objectionResponse: "Je comprends parfaitement. Sachez que je peux vous envoyer un r√©sum√© par email avec toutes les informations n√©cessaires. Vous pourrez me contacter quand vous serez pr√™t. Aucune pression, votre tranquillit√© d'esprit est notre priorit√©." },
        { id: "verification", title: "V√©rification", description: "Le client demande pourquoi v√©rifier", objectionResponse: "C'est une excellente question ! Cette v√©rification nous permet de vous proposer la meilleure formule adapt√©e √† votre situation et d'√©viter les doublons si vous √™tes d√©j√† couvert. C'est une √©tape importante pour votre protection et pour vous offrir un service personnalis√©." },
        { id: "obligatoire", title: "Obligatoire ?", description: "Le client demande si c'est obligatoire", objectionResponse: "Certaines informations sont effectivement obligatoires pour la souscription, comme votre identit√© et votre num√©ro de s√©curit√© sociale. Cependant, nous pouvons commencer avec les informations essentielles et compl√©ter le dossier progressivement, √† votre rythme." },
        { id: "confiance", title: "Confiance", description: "Le client veut √©tablir la confiance", objectionResponse: "Je comprends votre besoin de confiance. Permettez-moi de vous pr√©ciser que nous sommes un cabinet r√©glement√© et que toutes nos d√©marches sont transparentes. Je peux vous envoyer notre num√©ro d'enregistrement et toutes les informations l√©gales par email pour plus de transparence." }
      ]
    },
    9: {
      id: 9,
      title: "9. CONFIRMATION DES INFORMATIONS",
      conseillerMessage: "Je r√©p√®te les informations pour confirmation : [Nom, pr√©nom, date de naissance, adresse]. Tout est correct ?",
      categories: [
        { id: "correct", title: "Correct", description: "Le client confirme les informations", objectionResponse: "Parfait ! Merci pour votre confirmation. Je vais maintenant proc√©der √† la finalisation de votre dossier. Vous recevrez un email de confirmation dans les prochaines heures avec tous les d√©tails de votre contrat et vos garanties." },
        { id: "modification", title: "Modification", description: "Le client veut modifier une information", objectionResponse: "Aucun probl√®me, c'est le moment id√©al pour corriger. Quelle information souhaitez-vous modifier ? Je prends note et je mets √† jour votre dossier imm√©diatement. Il est important que tout soit exact pour votre protection." },
        { id: "complement", title: "Compl√©ment", description: "Le client veut ajouter des informations", objectionResponse: "Excellente initiative ! Avez-vous des informations compl√©mentaires √† ajouter qui pourraient √™tre utiles pour votre dossier ? Plus nous avons d'informations pr√©cises, meilleure sera votre couverture et plus rapide sera le traitement de votre dossier." },
        { id: "verification_supplementaire", title: "V√©rification suppl√©mentaire", description: "Le client demande plus de d√©tails", objectionResponse: "C'est tr√®s judicieux de vouloir v√©rifier ! Voici ce que j'ai enregistr√© : [r√©p√©ter les infos]. N'h√©sitez pas √† me demander si vous avez la moindre question sur une quelconque information. Votre tranquillit√© d'esprit est notre priorit√©." },
        { id: "delai", title: "D√©lai", description: "Le client demande le d√©lai de traitement", objectionResponse: "Excellente question ! Une fois votre confirmation re√ßue, le traitement du dossier prend g√©n√©ralement 24 √† 48 heures. Vous recevrez un email de confirmation avec votre num√©ro de contrat et tous les d√©tails de vos garanties. Nous faisons tout pour que ce soit rapide et efficace." },
        { id: "prochaine_etape", title: "Prochaine √©tape", description: "Le client demande ce qui se passe ensuite", objectionResponse: "Bonne question ! Apr√®s votre confirmation, je vais finaliser votre dossier et vous l'envoyer pour signature √©lectronique. Une fois sign√©, votre contrat sera actif et vous serez imm√©diatement prot√©g√©. Je vous guiderai √† chaque √©tape pour que tout soit simple et clair." },
        { id: "inquietude", title: "Inqui√©tude", description: "Le client est inquiet", objectionResponse: "Je comprends votre inqui√©tude, c'est normal quand on souscrit √† une nouvelle protection. Sachez que je reste √† votre disposition pour toutes vos questions et que vous avez un d√©lai de R√©flexion l√©gal. Votre protection est notre priorit√©, mais votre tranquillit√© d'esprit aussi." }
      ]
    },
    10: {
      id: 10,
      title: "10. PR√âSENTATION DES AVANTAGES",
      conseillerMessage: "Les avantages de cette formule : Pas de d√©lai de carence, pas de franchise, versement direct en 48h, couverture mondiale, annulation possible √† tout temps.",
      categories: [
        { id: "interesse_avantages", title: "Int√©ress√© avantages", description: "Le client est int√©ress√© par les avantages", objectionResponse: "C'est parfait ! Ces avantages font vraiment la diff√©rence par rapport aux autres formules du march√©. Vous b√©n√©ficiez d'une protection imm√©diate, sans complications, avec un versement rapide des indemnit√©s. C'est la tranquillit√© d'esprit assur√©e d√®s le premier jour." },
        { id: "comparaison", title: "Comparaison", description: "Le client veut comparer avec d'autres", objectionResponse: "C'est tr√®s pertinent de comparer ! Ce qui distingue notre formule, c'est l'absence de franchise et de d√©lai de carence, ce qui est rare sur le march√©. De plus, notre versement en 48h est l'un des plus rapides. Vous avez une protection compl√®te sans les inconv√©nients habituels." },
        { id: "details", title: "D√©tails", description: "Le client demande plus de d√©tails", objectionResponse: "Avec plaisir ! Voici plus en d√©tail : la couverture mondiale signifie que vous √™tes prot√©g√© partout dans le monde. L'annulation √† tout temps vous donne une flexibilit√© totale. Le versement direct en 48h vous √©vite les longues attentes. C'est vraiment une formule pens√©e pour votre confort." },
        { id: "limites", title: "Limites", description: "Le client demande les limites", objectionResponse: "Excellente question de pr√©cision ! Les limites sont claires : les cas pr√©existants non d√©clar√©s et les hospitalisations volontaires ne sont pas couverts. Pour tout le reste (maladie, accident, agression), vous avez une protection compl√®te sans restriction. Je peux vous envoyer la liste d√©taill√©e par email." },
        { id: "cout_benefice", title: "Co√ªt/b√©n√©fice", description: "Le client √©value le rapport co√ªt/b√©n√©fice", objectionResponse: "C'est une excellente fa√ßon d'analyser ! Pour le co√ªt de quelques caf√©s par jour, vous vous prot√©gez contre des d√©penses qui peuvent se chiffrer en milliers d'euros. Une seule journ√©e d'hospitalisation couvre plusieurs mois de cotisation. C'est un investissement tr√®s rentable pour votre s√©curit√© financi√®re." },
        { id: "exclusivite", title: "Exclusivit√©", description: "Le client demande si c'est exclusif", objectionResponse: "Cette formule est exclusive √† notre partenariat avec Klasseur, ce qui nous permet de vous offrir des conditions avantageuses que vous ne trouverez pas ailleurs. C'est le fruit de notre expertise et de notre relation de confiance avec un assureur de premier plan. Vous b√©n√©ficiez d'une offre sur mesure." },
        { id: "flexibilite", title: "Flexibilit√©", description: "Le client s'int√©resse √† la flexibilit√©", objectionResponse: "La flexibilit√© est en effet un atout majeur ! Vous pouvez adapter votre couverture, l'annuler sans p√©nalit√©, et m√™me la r√©activer facilement. Cette formule s'adapte √† votre vie et √† vos besoins changeants. C'est une protection qui √©volue avec vous, sans contrainte." }
      ]
    },
    11: {
      id: 11,
      title: "11. FINALISATION ET SUIVI",
      conseillerMessage: "Pour r√©sumer : Vous souscrivez √† la formule Pr√©voyance avec [montant]‚Ç¨/mois. Couverture compl√®te d√®s demain. √ätes-vous d'accord pour proc√©der ?",
      categories: [
        { id: "accord", title: "Accord", description: "Le client est d'accord", objectionResponse: "Excellent ! Je vais imm√©diatement pr√©parer votre dossier pour signature √©lectronique. Vous recevrez un email dans les prochaines heures avec tous les d√©tails et le lien pour signer. F√©licitations pour cette excellente d√©cision qui vous prot√®ge efficacement d√®s demain !" },
        { id: "reflexion_final", title: "R√©flexion", description: "Le client veut encore r√©fl√©chir", objectionResponse: "Je comprends parfaitement votre besoin de r√©flexion. C'est une d√©cision importante. Je vais vous envoyer un r√©sum√© complet par email avec tous les d√©tails. Prenez le temps qu'il vous faut, je reste √† votre disposition pour toutes vos questions. Il n'y a aucune pression." },
        { id: "consultation", title: "Consultation", description: "Le client veut consulter quelqu'un", objectionResponse: "C'est tr√®s judicieux de vouloir consulter ! Je vous encourage √† en parler avec vos proches ou votre conseiller habituel. Je vais vous envoyer un document r√©capitulatif clair que vous pourrez partager. Nous sommes l√† pour vous aider, pas pour vous presser." },
        { id: "conditions", title: "Conditions", description: "Le client veut voir les conditions", objectionResponse: "Absolument ! Transparence totale est notre principe. Je vais vous envoyer imm√©diatement l'ensemble des conditions g√©n√©rales et particuli√®res par email. Prenez le temps de les lire attentivement et n'h√©sitez pas √† me poser toutes vos questions. Votre confiance est essentielle." },
        { id: "garanties_supplementaires", title: "Garanties suppl√©mentaires", description: "Le client demande plus de garanties", objectionResponse: "C'est une excellente demande ! Nous pouvons effectivement enrichir votre formule avec des garanties compl√©mentaires comme l'assistance voyage ou la couverture des soins dentaires. Je vais vous pr√©parer une proposition personnalis√©e avec ces options suppl√©mentaires pour que vous puissiez choisir." },
        { id: "delai_signature", title: "D√©lai signature", description: "Le client demande le d√©lai pour signer", objectionResponse: "Bonne question ! Vous avez g√©n√©ralement 14 jours de R√©flexion pour signer et retourner votre dossier. Cependant, pour une activation rapide de votre protection, je vous conseille de signer dans les 48h. Mais n'h√©sitez pas √† prendre le temps n√©cessaire pour votre d√©cision." },
        { id: "modifications", title: "Modifications", description: "Le client veut modifier quelque chose", objectionResponse: "Aucun probl√®me ! C'est le moment id√©al pour ajuster. Que souhaitez-vous modifier ? Le montant de la couverture, les garanties, ou autre chose ? Je suis l√† pour vous proposer la formule qui correspond parfaitement √† vos besoins et √† votre budget." }
      ]
    }
  }

  const handleCategorySelect = (categoryId: string) => {
    // Ajouter un message client fictif
    const currentStepData = scriptSteps[currentStep]
    const selectedCategory = currentStepData.categories.find(c => c.id === categoryId)
    
    const clientMessage: Message = {
      id: messages.length + 1,
      text: `[${selectedCategory?.title}]`,
      sender: "client",
      timestamp: new Date()
    }
    
    const updatedMessages = [...messages, clientMessage]
    setMessages(updatedMessages)
    
    // Ajouter la r√©ponse d'objection du conseiller apr√®s un court d√©lai
    setTimeout(() => {
      const objectionMessage: Message = {
        id: messages.length + 2,
        text: selectedCategory?.objectionResponse || "",
        sender: "conseiller",
        timestamp: new Date()
      }
      
      const messagesWithObjection = [...updatedMessages, objectionMessage]
      setMessages(messagesWithObjection)
      
      // Sauvegarder les messages de l'√©tape actuelle
      saveStepMessages(currentStep, messagesWithObjection)
      
      // Passer √† l'√©tape suivante apr√®s un autre d√©lai pour une transition fluide
      setTimeout(() => {
        if (currentStep < 11) {
          const nextStep = currentStep + 1
          setCurrentStep(nextStep)
          
          // Ajouter le message du conseiller pour la nouvelle √©tape
          const conseillerMessage: Message = {
            id: messages.length + 3,
            text: scriptSteps[nextStep].conseillerMessage,
            sender: "conseiller",
            timestamp: new Date()
          }
          
          const nextStepMessages = [conseillerMessage]
          setMessages(nextStepMessages)
          saveStepMessages(nextStep, nextStepMessages)
        }
      }, 2000) // D√©lai plus long pour laisser le temps de lire l'objection
    }, 1000) // D√©lai avant la r√©ponse d'objection
  }

  const getCurrentStepData = () => {
    return scriptSteps[currentStep]
  }

  const progress = (currentStep / 11) * 100

  // Fonction pour obtenir l'emoji appropri√© pour chaque type de r√©action
  const getEmojiForReaction = (reactionId: string): string => {
    const emojiMap: Record<string, string> = {
      // √âtape 1 - Salutation
      "interesse": "üòä",
      "mecontent": "üò†",
      "curieux": "ü§î",
      "occupe": "‚è∞",
      "sceptique_s1": "ü§®",
      "deja_couvert": "‚úÖ",
      "urgence_s1": "üö®",
      
      // √âtape 2 - Courrier
      "oui": "üëç",
      "non": "üëé",
      "sceptique_s2": "‚ùì",
      "raccroche": "üìû",
      "oublie": "ü§∑",
      "jete": "üóëÔ∏è",
      "pas_interesse": "üôÖ",
      
      // √âtape 3 - Explication
      "compris": "üí°",
      "questions": "‚ùì",
      "doute": "üòï",
      "refus": "üö´",
      "confiance_s3": "ü§ù",
      "hesitation": "‚öñÔ∏è",
      "information": "‚ÑπÔ∏è",
      
      // √âtapes 4-11 - Arguments et conclusion
      "prix": "üí∞",
      "reflexion": "ü§î",
      "concurrent": "‚öîÔ∏è",
      "confiance": "ü§ù",
      "urgence": "üö®",
      "famille": "üë®‚Äçüë©‚Äçüëß‚Äçüë¶",
      "sante": "üè•",
      "budget": "üí≥",
      "contrat": "üìã",
      "garantie": "üõ°Ô∏è",
      "avantage": "‚≠ê",
      "final": "üéØ",
      "signature": "‚úçÔ∏è"
    }
    
    return emojiMap[reactionId] || "üí¨"
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-50 to-gray-100 p-4 flex items-center justify-center">
      {!selectedCabinet ? (
        // √âcran de s√©lection du cabinet
        <div className="w-full max-w-5xl mx-auto">
          <Card className="border-0 shadow-lg bg-white/90 backdrop-blur-sm">
            <CardHeader className="text-center pb-8">
              <div className="mb-6">
                <h1 className="text-4xl font-bold text-gray-800 mb-3">
                  Soutien Conseiller
                </h1>
                <p className="text-xl text-gray-600">
                  Pr√©voyance
                </p>
              </div>
              <div className="w-24 h-1 bg-gradient-to-r from-slate-600 to-gray-600 mx-auto rounded-full"></div>
            </CardHeader>
            
            <CardContent className="px-8 pb-8">
              <div className="text-center mb-8">
                <h2 className="text-xl font-semibold text-gray-700 mb-2">
                  Choisissez votre cabinet
                </h2>
              </div>
              
              <div className="grid grid-cols-1 md:grid-cols-2 gap-8 max-w-4xl mx-auto">
                {cabinets.map((cabinet) => (
                  <Card 
                    key={cabinet.id}
                    className={`border-2 cursor-pointer transition-all duration-300 hover:shadow-xl hover:scale-105 ${
                      cabinet.id === 'php' 
                        ? 'border-slate-200 hover:border-slate-400' 
                        : 'border-gray-200 hover:border-gray-400'
                    }`}
                    onClick={() => startConversation(cabinet.id)}
                  >
                    <CardContent className="p-10 text-center">
                      <div className="flex justify-center mb-8">
                        <div className={`w-24 h-24 rounded-full ${cabinet.id === 'php' ? 'bg-slate-700' : 'bg-gray-700'} flex items-center justify-center text-white font-bold text-2xl shadow-lg`}>
                          {cabinet.id.toUpperCase()}
                        </div>
                      </div>
                      <h3 className="text-2xl font-bold text-gray-800 mb-4">
                        {cabinet.name}
                      </h3>
                      <p className="text-gray-600 text-lg mb-8">{cabinet.description}</p>
                      <div className={`inline-flex items-center px-8 py-4 rounded-full text-lg font-medium ${
                        cabinet.id === 'php' 
                          ? 'bg-slate-100 text-slate-700 hover:bg-slate-200' 
                          : 'bg-gray-100 text-gray-700 hover:bg-gray-200'
                      } transition-colors cursor-pointer`}>
                        Commencer
                      </div>
                    </CardContent>
                  </Card>
                ))}
              </div>
              
            </CardContent>
          </Card>
        </div>
      ) : (
        // Interface principale de simulation
        <div className="w-full max-w-7xl mx-auto">
          <Card className="border-0 shadow-lg bg-white/90 backdrop-blur-sm">
            {/* En-t√™te */}
            <CardHeader className="pb-6">
              <div className="flex items-center justify-between">
                <div className="flex items-center space-x-6">
                  <div className={`w-16 h-16 rounded-full ${selectedCabinet === 'php' ? 'bg-slate-700' : 'bg-gray-700'} flex items-center justify-center text-white font-bold text-xl shadow-lg`}>
                    {selectedCabinet?.toUpperCase()}
                  </div>
                  <div>
                    <h1 className="text-2xl font-bold text-gray-800">
                      Soutien Conseiller - Pr√©voyance
                    </h1>
                    <p className="text-base text-gray-600">{getCabinetName()}</p>
                  </div>
                </div>
                  <div className="flex items-center space-x-3">
                <Button 
                  variant="outline" 
                  onClick={() => {
                    setShowLexique(!showLexique)
                    setShowIBANValidator(false)
                    setShowNIRValidator(false)
                  }}
                  className={`px-4 py-2 h-10 text-sm font-medium hover:bg-blue-50 hover:border-blue-300 transition-all duration-200 ${
                    showLexique ? 'bg-blue-100 border-blue-300' : ''
                  }`}
                >
                  Lexique
                </Button>
                <Button 
                  variant="outline" 
                  onClick={() => {
                    setShowIBANValidator(!showIBANValidator)
                    setShowLexique(false)
                    setShowNIRValidator(false)
                  }}
                  className={`px-4 py-2 h-10 text-sm font-medium hover:bg-green-50 hover:border-green-300 transition-all duration-200 ${
                    showIBANValidator ? 'bg-green-100 border-green-300' : ''
                  }`}
                >
                  IBAN
                </Button>
                <Button 
                  variant="outline" 
                  onClick={() => {
                    setShowNIRValidator(!showNIRValidator)
                    setShowLexique(false)
                    setShowIBANValidator(false)
                  }}
                  className={`px-4 py-2 h-10 text-sm font-medium hover:bg-purple-50 hover:border-purple-300 transition-all duration-200 ${
                    showNIRValidator ? 'bg-purple-100 border-purple-300' : ''
                  }`}
                >
                  NIR
                </Button>
                <Button 
                  variant="outline" 
                  onClick={resetConversation}
                  className="px-4 py-2 h-10 text-sm font-medium hover:bg-red-50 hover:border-red-300 transition-all duration-200"
                >
                  Reset
                </Button>
              </div>
              </div>
            </CardHeader>
            
            <CardContent className="space-y-4">
              {showLexique ? (
                <Lexique />
              ) : showIBANValidator ? (
                <IBANValidator />
              ) : showNIRValidator ? (
                <NIRValidator />
              ) : (
                <>
                  {/* Barre de progression avec navigation */}
                  <Card className={`${getCabinetColors().accent} border ${getCabinetColors().border} shadow-sm`}>
                    <CardContent className="p-6">
                      <div className="flex items-center justify-between mb-4">
                        <div className="flex items-center space-x-3">
                          <Button
                            variant="outline"
                            size="sm"
                            onClick={goToPreviousStep}
                            disabled={currentStep <= 1}
                            className="px-3 py-2 h-8 text-xs font-medium disabled:opacity-50 disabled:cursor-not-allowed"
                          >
                            ‚Üê Pr√©c√©dent
                          </Button>
                          <Badge variant="outline" className={`${getCabinetColors().badge} px-3 py-1 text-sm`}>
                            {getCabinetName()}
                          </Badge>
                          <span className="text-sm text-gray-600 font-medium">{currentStep}/11</span>
                          <Button
                            variant="outline"
                            size="sm"
                            onClick={goToNextStep}
                            disabled={currentStep >= 11}
                            className="px-3 py-2 h-8 text-xs font-medium disabled:opacity-50 disabled:cursor-not-allowed"
                          >
                            Suivant ‚Üí
                          </Button>
                        </div>
                        <Badge variant="outline" className="text-sm px-3 py-1 font-medium">
                          {progress}%
                        </Badge>
                      </div>
                      <Progress value={progress} className="h-2 mb-4" />
                      <div className="text-center">
                        <Badge variant="outline" className="text-sm font-medium px-3 py-1">
                          {getCurrentStepData().title}
                        </Badge>
                      </div>
                      
                      {/* Navigation rapide par √©tapes */}
                      <div className="mt-6">
                        <div className="flex flex-wrap gap-2 justify-center mb-3">
                          {Array.from({ length: 11 }, (_, i) => i + 1).map((step) => (
                            <Button
                              key={step}
                              variant={step === currentStep ? "default" : "outline"}
                              size="sm"
                              onClick={() => goToStep(step)}
                              className={`w-10 h-10 p-0 text-xs font-medium ${
                                step === currentStep
                                  ? `${getCabinetColors().primary} text-white`
                                  : stepHistory[step] && stepHistory[step]?.length > 0
                                  ? `${getCabinetColors().secondary} text-white`
                                  : ""
                              }`}
                              title={`${step}. ${scriptSteps[step].title}`}
                            >
                              {step}
                            </Button>
                          ))}
                        </div>
                        
                        {/* L√©gende */}
                        <div className="flex items-center justify-center gap-6 text-xs text-gray-600">
                          <div className="flex items-center gap-2">
                            <div className={`w-4 h-4 rounded ${getCabinetColors().primary}`}></div>
                            <span>√âtape actuelle</span>
                          </div>
                          <div className="flex items-center gap-2">
                            <div className={`w-4 h-4 rounded ${getCabinetColors().secondary}`}></div>
                            <span>√âtape compl√©t√©e</span>
                          </div>
                          <div className="flex items-center gap-2">
                            <div className="w-4 h-4 rounded border border-gray-300"></div>
                            <span>√âtape non commenc√©e</span>
                          </div>
                        </div>
                      </div>
                    </CardContent>
                  </Card>

                  {/* Zone de conversation */}
                  <div className="grid grid-cols-1 lg:grid-cols-3 gap-6">
                    {/* Messages */}
                    <div className="lg:col-span-2">
                      <Card className="h-96 shadow-sm">
                        <CardHeader className="pb-3 px-6 pt-6">
                          <CardTitle className="text-lg font-semibold text-gray-800 flex items-center justify-between">
                            <span>Conversation</span>
                            <div className="text-xs text-gray-500 font-normal">
                              üí° Vous pouvez naviguer entre les √©tapes et modifier vos r√©ponses
                            </div>
                          </CardTitle>
                        </CardHeader>
                        <CardContent className="p-4 pt-0">
                          <div className="space-y-3 max-h-64 overflow-y-auto">
                            {messages.map((message) => (
                              <div
                                key={message.id}
                                className={`flex gap-3 ${
                                  message.sender === "conseiller" ? "justify-start" : "justify-end"
                                }`}
                              >
                                {message.sender === "conseiller" && (
                                  <Avatar className="w-8 h-8 flex-shrink-0">
                                    <AvatarFallback className={`${getCabinetColors().primary} text-white text-sm`}>
                                      C
                                    </AvatarFallback>
                                  </Avatar>
                                )}
                                
                                <div
                                  className={`max-w-[80%] rounded-lg px-4 py-3 ${
                                    message.sender === "conseiller"
                                      ? `bg-white border-l-4 ${getCabinetColors().primary.replace('bg-', 'border-l-')} shadow-sm`
                                      : "bg-gradient-to-r from-blue-600 to-blue-700 text-white shadow-md"
                                  }`}
                                >
                                  <div className="text-sm font-medium mb-1 opacity-80">
                                    {message.sender === "conseiller" ? "Conseiller" : "Client"}
                                  </div>
                                  <div className="text-sm whitespace-pre-line leading-relaxed">
                                    {splitTextWithLexiqueTerms(message.text)}
                                  </div>
                                  <div className={`text-xs mt-1 opacity-70`}>
                                    {message.timestamp.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}
                                  </div>
                                </div>
                                
                                {message.sender === "client" && (
                                  <Avatar className="w-6 h-6 flex-shrink-0">
                                    <AvatarFallback className="bg-green-600 text-white text-xs">
                                      Cl
                                    </AvatarFallback>
                                  </Avatar>
                                )}
                              </div>
                            ))}
                          </div>
                        </CardContent>
                      </Card>
                    </div>

                    {/* R√©actions possibles */}
                    <div>
                      <Card className="h-96 shadow-sm">
                        <CardHeader className="pb-3 px-6 pt-6">
                          <CardTitle className="text-lg font-semibold text-gray-800">
                            R√©actions
                          </CardTitle>
                          <p className="text-sm text-gray-600">
                            {stepHistory[currentStep] && stepHistory[currentStep]?.length > 1 
                              ? "Cliquez pour modifier votre r√©ponse" 
                              : "Cliquez pour r√©pondre"
                            }
                          </p>
                        </CardHeader>
                        <CardContent className="p-4 pt-0">
                          <div className="space-y-3 max-h-64 overflow-y-auto">
                            {getCurrentStepData().categories.map((category) => {
                              const emoji = getEmojiForReaction(category.id);
                              return (
                                <Button
                                  key={category.id}
                                  variant="outline"
                                  className="w-full h-auto p-4 text-left flex items-center gap-3 hover:bg-gray-50 transition-colors border border-gray-200 rounded-lg text-sm font-medium"
                                  onClick={() => handleCategorySelect(category.id)}
                                >
                                  <span className="text-lg flex-shrink-0">{emoji}</span>
                                  <div className="flex-1 min-w-0">
                                    <div className="font-medium text-sm leading-tight text-gray-800 truncate">
                                      {category.title}
                                    </div>
                                    <div className="text-xs text-gray-600 leading-relaxed line-clamp-2">
                                      {category.description}
                                    </div>
                                  </div>
                                </Button>
                              );
                            })}
                          </div>
                        </CardContent>
                      </Card>
                    </div>
                  </div>
                </>
              )}
            </CardContent>
          </Card>
        </div>
      )}
    </div>
  )
}